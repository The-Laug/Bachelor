import "testDoc18_summationDomain.vpr"



method sum_one_to_n(n: Int,n2: Int) returns (res: Int,res2: Int)
    requires 0 <= n < n2
    ensures res2 > res
{    
    res := 0
    var i: Int := 0
    res2 := 0
    var l: Int 
    var i2: Int := l
    while (i <= n)
        invariant 0 <= i
        invariant i <= n + 1
        invariant res == simplesum(0, i-1)
    {
        res := res + i
        i := i + 1
    }
    while (i2 <= n2)
        invariant 0 <= i2
        invariant i2 <= n2 + l + 1
        invariant res2 == simplesum(0+l, i2-1+l) - (l*(i2-1+l-0+l+1))
    {
        res2 := res2 + i2 - l
        i2 := i2 + l + 1
    }
    assert res < res2

}
