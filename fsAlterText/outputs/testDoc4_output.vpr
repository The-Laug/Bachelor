import "testDoc4_summationDomain.vpr"
method try(x:Int, y: Int) 
{
    var i: Int
    var N: Int

    assume 0 < i < N;

    // Simple linear summation
    assert simplesum(0, 10) == 55
    assert 2 * simplesum(1, 5) == 30

    // Polynomial summation
    assert squaresum(0, 10) == 385
    assert genericSum1(1, 5) == 225

    // Complex inner function
    assert 2 * genericSum2(0, 5) +  3 * squaresum(0, 5) == 225
    assert genericSum4(1, 3) +  2 * genericSum5(1, 3) + genericSum6(1, 3) == 26

    // Edge cases
    assert simplesum(5, 5) == 5
    assert simplesum(10, 0) == 0  // Empty summation

    // Negative coefficients
    assert genericSum7(0, 4) -  2 * squaresum(0, 4) == -70

    // Trigonometric (if supported)
    // assert genericSum9(0, 2)) == sin(0) + sin(1) + sin(2)
}
