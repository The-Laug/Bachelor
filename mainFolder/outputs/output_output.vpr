import "output_summationDomain.vpr"
import "summationDomain.vpr"
method sumSquare(n: Int) returns (res: Int) 
    requires 0 <= n
    ensures res == squaresum(0, n) // 0^2+1^2+2^2...+n^2
{
    res :=0
    var i:Int := 0
    while (i <= n)
        invariant 0 <= i 
        invariant i <= n+1
        invariant res == squaresum(0, i-1)
        {
            res := res + i*i
            i := i+1
        }
}
