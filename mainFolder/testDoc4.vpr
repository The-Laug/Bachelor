method try(x:Int, y: Int) 
{
    var i: Int
    var N: Int
    var j: Int

    assume 0 < i < N;

    // Simple linear summation
    assert for j=0 to 10 sum (j) == 55
    assert for j=1 to 5 sum (2*j) == 30

    // Polynomial summation
    assert for j=0 to 10 sum (j^2) == 385
    assert for j=1 to 5 sum (j^3) == 225

    // Complex inner function
    assert for j=0 to 5 sum (2*j + 3*j^2) == 225
    assert for j=1 to 3 sum (j^3 + 2*j + 1) == 26

    // Edge cases
    assert for j=5 to 5 sum (j) == 5
    assert for j=10 to 0 sum (j) == 0  // Empty summation

    // Negative coefficients
    assert for j=0 to 4 sum (j- 2*j^2) == -70

    // Trigonometric (if supported)
    // assert for j=0 to 2 sum (sin(j)) == sin(0) + sin(1) + sin(2)
}
